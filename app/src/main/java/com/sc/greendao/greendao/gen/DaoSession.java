package com.sc.greendao.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sc.entity.IpAddress;
import com.sc.entity.NetAddress;
import com.sc.entity.NEWS;
import com.sc.entity.RecordCount;
import com.sc.entity.RecordNum;
import com.sc.entity.RfidLabels;

import com.sc.greendao.greendao.gen.IpAddressDao;
import com.sc.greendao.greendao.gen.NetAddressDao;
import com.sc.greendao.greendao.gen.NEWSDao;
import com.sc.greendao.greendao.gen.RecordCountDao;
import com.sc.greendao.greendao.gen.RecordNumDao;
import com.sc.greendao.greendao.gen.RfidLabelsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig ipAddressDaoConfig;
    private final DaoConfig netAddressDaoConfig;
    private final DaoConfig nEWSDaoConfig;
    private final DaoConfig recordCountDaoConfig;
    private final DaoConfig recordNumDaoConfig;
    private final DaoConfig rfidLabelsDaoConfig;

    private final IpAddressDao ipAddressDao;
    private final NetAddressDao netAddressDao;
    private final NEWSDao nEWSDao;
    private final RecordCountDao recordCountDao;
    private final RecordNumDao recordNumDao;
    private final RfidLabelsDao rfidLabelsDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        ipAddressDaoConfig = daoConfigMap.get(IpAddressDao.class).clone();
        ipAddressDaoConfig.initIdentityScope(type);

        netAddressDaoConfig = daoConfigMap.get(NetAddressDao.class).clone();
        netAddressDaoConfig.initIdentityScope(type);

        nEWSDaoConfig = daoConfigMap.get(NEWSDao.class).clone();
        nEWSDaoConfig.initIdentityScope(type);

        recordCountDaoConfig = daoConfigMap.get(RecordCountDao.class).clone();
        recordCountDaoConfig.initIdentityScope(type);

        recordNumDaoConfig = daoConfigMap.get(RecordNumDao.class).clone();
        recordNumDaoConfig.initIdentityScope(type);

        rfidLabelsDaoConfig = daoConfigMap.get(RfidLabelsDao.class).clone();
        rfidLabelsDaoConfig.initIdentityScope(type);

        ipAddressDao = new IpAddressDao(ipAddressDaoConfig, this);
        netAddressDao = new NetAddressDao(netAddressDaoConfig, this);
        nEWSDao = new NEWSDao(nEWSDaoConfig, this);
        recordCountDao = new RecordCountDao(recordCountDaoConfig, this);
        recordNumDao = new RecordNumDao(recordNumDaoConfig, this);
        rfidLabelsDao = new RfidLabelsDao(rfidLabelsDaoConfig, this);

        registerDao(IpAddress.class, ipAddressDao);
        registerDao(NetAddress.class, netAddressDao);
        registerDao(NEWS.class, nEWSDao);
        registerDao(RecordCount.class, recordCountDao);
        registerDao(RecordNum.class, recordNumDao);
        registerDao(RfidLabels.class, rfidLabelsDao);
    }
    
    public void clear() {
        ipAddressDaoConfig.getIdentityScope().clear();
        netAddressDaoConfig.getIdentityScope().clear();
        nEWSDaoConfig.getIdentityScope().clear();
        recordCountDaoConfig.getIdentityScope().clear();
        recordNumDaoConfig.getIdentityScope().clear();
        rfidLabelsDaoConfig.getIdentityScope().clear();
    }

    public IpAddressDao getIpAddressDao() {
        return ipAddressDao;
    }

    public NetAddressDao getNetAddressDao() {
        return netAddressDao;
    }

    public NEWSDao getNEWSDao() {
        return nEWSDao;
    }

    public RecordCountDao getRecordCountDao() {
        return recordCountDao;
    }

    public RecordNumDao getRecordNumDao() {
        return recordNumDao;
    }

    public RfidLabelsDao getRfidLabelsDao() {
        return rfidLabelsDao;
    }

}
